# https://lychee.cli.rs/usage/config/
# Example config: https://github.com/lycheeverse/lychee/blob/master/lychee.example.toml

#############################  Display  #############################

# Verbose program output
# Accepts log level: "error", "warn", "info", "debug", "trace"
# verbose = "info"

# Don't show interactive progress bar while checking links.
# no_progress = false

# Path to summary output file.
# output = "lychee_report.md"

#############################  Cache  ###############################

# Enable link caching. This can be helpful to avoid checking the same links on multiple runs.
cache = true

# Discard all cached requests older than this duration.
max_cache_age = "1d"

#############################  Runtime  #############################

# Number of threads to utilize.
# Defaults to number of cores available to the system if omitted.
# threads = 2

# Maximum number of allowed redirects.
max_redirects = 6

# Maximum number of allowed retries before a link is declared dead.
max_retries = 2

# Maximum number of concurrent link checks.
# max_concurrency = 14

#############################  Requests  ############################

# User agent to send with each request.
user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36 Edg/135.0.0.0"

# Website timeout from connect to response finished.
timeout = 45

# Minimum wait time in seconds between retries of failed requests.
retry_wait_time = 2

# Comma-separated list of accepted status codes for valid links.
# Supported values are:
#
# accept = ["200..=204", "429"]
# accept = "200..=204, 429"
# accept = ["200", "429"]
# accept = "200, 429"
accept = [
  # Informational
  100,
  101,
  102,
  103,
  # Success
  200,
  201,
  202,
  203,
  204,
  205,
  206,
  207,
  208,
  226,
  # Redirection
  300,
  301,
  302,
  303,
  304,
  307,
  308,
]

# Proceed for server connections considered insecure (invalid TLS).
insecure = false

# Only test links with the given schemes (e.g. https).
# Omit to check links with any other scheme.
# At the moment, we support http, https, file, and mailto.
scheme = ["https", "http", "file"]

# When links are available using HTTPS, treat HTTP links as errors.
require_https = false

# Request method
method = "get"

# Custom request headers
# header = { "accept" = "text/html", "x-custom-header" = "value" }
headers = [
  # Avoid being blocked by GitHub's anti-bot measures
  "Accept=text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
  # Some sites require this header
  "Accept-Language=en-US,en;q=0.5",
  # Disable compression to avoid issues with some servers
  "Accept-Encoding=identity",
]

# Remap URI matching pattern to different URI.
# remap = ["https://example.com http://example.invalid"]

# Base URL or website root directory to check relative URLs.
# base_url = "https://example.com"

# HTTP basic auth support. This will be the username and password passed to the
# authorization HTTP header. See
# <https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization>
# basic_auth = ["example.com user:pwd"]

#############################  Exclusions  ##########################

# Skip missing input files (default is to error if they don't exist).
skip_missing = false

# Check links inside `<code>` and `<pre>` blocks as well as Markdown code
# blocks.
include_verbatim = false

# Ignore case of paths when matching glob patterns.
glob_ignore_case = true

# Exclude URLs and mail addresses from checking (supports regex).
exclude = [
  '^https://cli\.github\.com',
  '^https://www\.linkedin\.com',
  '^https://web\.archive\.org/web/',
]

# Exclude these filesystem paths from getting checked.
exclude_path = [
  ".github/configs/release-drafter.yml",
  "*/node_modules/*",
  "*/.git/*",
  "*/.venv/*",
  "*/venv/*",
  "*/__pycache__/*",
  "*/target/*",
  "*/build/*",
  "*/dist/*",
  "*/megalinter-reports/*",
]

# URLs to check (supports regex). Has preference over all excludes.
include = ['gist\.github\.com.*']

# Exclude all private IPs from checking.
# Equivalent to setting `exclude_private`, `exclude_link_local`, and `exclude_loopback` to true.
exclude_all_private = true

# Exclude private IP address ranges from checking.
exclude_private = true

# Exclude link-local IP address range from checking.
exclude_link_local = true

# Exclude loopback IP address range and localhost from checking.
exclude_loopback = true

# Check mail addresses
# include_mail = false
